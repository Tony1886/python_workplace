COMMENT_COLOR=0,128,0
DOCSTRING_MARKUP_COLOR=0,255,0
INTERPRETERS_CHECKED_ONCE=true
INTERPRETER_PATH_NEW=<xml>\n<name>python2</name>\n<version>2.7</version>\n<executable>D\:\\Python27\\python.exe</executable>\n<lib>D\:\\Python27\\DLLs</lib>\n<lib>D\:\\Python27\\lib</lib>\n<lib>D\:\\Python27\\lib\\lib-tk</lib>\n<lib>D\:\\Python27</lib>\n<lib>D\:\\Python27\\lib\\site-packages</lib>\n<lib>D\:\\Python27\\lib\\site-packages\\lpthw.web-1.1-py2.7.egg</lib>\n<forced_lib>Image</forced_lib>\n<forced_lib>OpenGL</forced_lib>\n<forced_lib>__builtin__</forced_lib>\n<forced_lib>__main__</forced_lib>\n<forced_lib>_ast</forced_lib>\n<forced_lib>_bisect</forced_lib>\n<forced_lib>_bytesio</forced_lib>\n<forced_lib>_codecs</forced_lib>\n<forced_lib>_codecs_cn</forced_lib>\n<forced_lib>_codecs_hk</forced_lib>\n<forced_lib>_codecs_iso2022</forced_lib>\n<forced_lib>_codecs_jp</forced_lib>\n<forced_lib>_codecs_kr</forced_lib>\n<forced_lib>_codecs_tw</forced_lib>\n<forced_lib>_collections</forced_lib>\n<forced_lib>_csv</forced_lib>\n<forced_lib>_fileio</forced_lib>\n<forced_lib>_functools</forced_lib>\n<forced_lib>_heapq</forced_lib>\n<forced_lib>_hotshot</forced_lib>\n<forced_lib>_io</forced_lib>\n<forced_lib>_json</forced_lib>\n<forced_lib>_locale</forced_lib>\n<forced_lib>_lsprof</forced_lib>\n<forced_lib>_md5</forced_lib>\n<forced_lib>_multibytecodec</forced_lib>\n<forced_lib>_random</forced_lib>\n<forced_lib>_sha</forced_lib>\n<forced_lib>_sha256</forced_lib>\n<forced_lib>_sha512</forced_lib>\n<forced_lib>_sre</forced_lib>\n<forced_lib>_struct</forced_lib>\n<forced_lib>_subprocess</forced_lib>\n<forced_lib>_symtable</forced_lib>\n<forced_lib>_warnings</forced_lib>\n<forced_lib>_weakref</forced_lib>\n<forced_lib>_winreg</forced_lib>\n<forced_lib>array</forced_lib>\n<forced_lib>audioop</forced_lib>\n<forced_lib>binascii</forced_lib>\n<forced_lib>cPickle</forced_lib>\n<forced_lib>cStringIO</forced_lib>\n<forced_lib>cmath</forced_lib>\n<forced_lib>datetime</forced_lib>\n<forced_lib>email</forced_lib>\n<forced_lib>errno</forced_lib>\n<forced_lib>exceptions</forced_lib>\n<forced_lib>future_builtins</forced_lib>\n<forced_lib>gc</forced_lib>\n<forced_lib>gi</forced_lib>\n<forced_lib>hashlib</forced_lib>\n<forced_lib>imageop</forced_lib>\n<forced_lib>imp</forced_lib>\n<forced_lib>itertools</forced_lib>\n<forced_lib>marshal</forced_lib>\n<forced_lib>math</forced_lib>\n<forced_lib>mmap</forced_lib>\n<forced_lib>mock</forced_lib>\n<forced_lib>msvcrt</forced_lib>\n<forced_lib>multiprocessing</forced_lib>\n<forced_lib>nt</forced_lib>\n<forced_lib>numpy</forced_lib>\n<forced_lib>operator</forced_lib>\n<forced_lib>os</forced_lib>\n<forced_lib>os.path</forced_lib>\n<forced_lib>parser</forced_lib>\n<forced_lib>pytest</forced_lib>\n<forced_lib>scipy</forced_lib>\n<forced_lib>signal</forced_lib>\n<forced_lib>socket</forced_lib>\n<forced_lib>ssl</forced_lib>\n<forced_lib>strop</forced_lib>\n<forced_lib>sys</forced_lib>\n<forced_lib>thread</forced_lib>\n<forced_lib>time</forced_lib>\n<forced_lib>wx</forced_lib>\n<forced_lib>wxPython</forced_lib>\n<forced_lib>xxsubtype</forced_lib>\n<forced_lib>zipimport</forced_lib>\n<forced_lib>zlib</forced_lib>\n</xml>&&&&&<xml>\n<name>python3</name>\n<version>3.6</version>\n<executable>D\:\\Python36\\python.exe</executable>\n<lib>D\:\\Python36\\DLLs</lib>\n<lib>D\:\\Python36\\lib</lib>\n<lib>D\:\\Python36</lib>\n<lib>D\:\\Python36\\lib\\site-packages</lib>\n<forced_lib>Image</forced_lib>\n<forced_lib>OpenGL</forced_lib>\n<forced_lib>_ast</forced_lib>\n<forced_lib>_bisect</forced_lib>\n<forced_lib>_blake2</forced_lib>\n<forced_lib>_bytesio</forced_lib>\n<forced_lib>_codecs</forced_lib>\n<forced_lib>_codecs_cn</forced_lib>\n<forced_lib>_codecs_hk</forced_lib>\n<forced_lib>_codecs_iso2022</forced_lib>\n<forced_lib>_codecs_jp</forced_lib>\n<forced_lib>_codecs_kr</forced_lib>\n<forced_lib>_codecs_tw</forced_lib>\n<forced_lib>_collections</forced_lib>\n<forced_lib>_csv</forced_lib>\n<forced_lib>_datetime</forced_lib>\n<forced_lib>_fileio</forced_lib>\n<forced_lib>_functools</forced_lib>\n<forced_lib>_heapq</forced_lib>\n<forced_lib>_hotshot</forced_lib>\n<forced_lib>_imp</forced_lib>\n<forced_lib>_io</forced_lib>\n<forced_lib>_json</forced_lib>\n<forced_lib>_locale</forced_lib>\n<forced_lib>_lsprof</forced_lib>\n<forced_lib>_md5</forced_lib>\n<forced_lib>_multibytecodec</forced_lib>\n<forced_lib>_opcode</forced_lib>\n<forced_lib>_operator</forced_lib>\n<forced_lib>_pickle</forced_lib>\n<forced_lib>_random</forced_lib>\n<forced_lib>_sha</forced_lib>\n<forced_lib>_sha1</forced_lib>\n<forced_lib>_sha256</forced_lib>\n<forced_lib>_sha3</forced_lib>\n<forced_lib>_sha512</forced_lib>\n<forced_lib>_signal</forced_lib>\n<forced_lib>_sre</forced_lib>\n<forced_lib>_stat</forced_lib>\n<forced_lib>_string</forced_lib>\n<forced_lib>_struct</forced_lib>\n<forced_lib>_subprocess</forced_lib>\n<forced_lib>_symtable</forced_lib>\n<forced_lib>_thread</forced_lib>\n<forced_lib>_tracemalloc</forced_lib>\n<forced_lib>_warnings</forced_lib>\n<forced_lib>_weakref</forced_lib>\n<forced_lib>_winapi</forced_lib>\n<forced_lib>_winreg</forced_lib>\n<forced_lib>array</forced_lib>\n<forced_lib>atexit</forced_lib>\n<forced_lib>audioop</forced_lib>\n<forced_lib>binascii</forced_lib>\n<forced_lib>builtins</forced_lib>\n<forced_lib>cPickle</forced_lib>\n<forced_lib>cStringIO</forced_lib>\n<forced_lib>cmath</forced_lib>\n<forced_lib>datetime</forced_lib>\n<forced_lib>email</forced_lib>\n<forced_lib>errno</forced_lib>\n<forced_lib>exceptions</forced_lib>\n<forced_lib>faulthandler</forced_lib>\n<forced_lib>future_builtins</forced_lib>\n<forced_lib>gc</forced_lib>\n<forced_lib>gi</forced_lib>\n<forced_lib>hashlib</forced_lib>\n<forced_lib>imageop</forced_lib>\n<forced_lib>imp</forced_lib>\n<forced_lib>itertools</forced_lib>\n<forced_lib>marshal</forced_lib>\n<forced_lib>math</forced_lib>\n<forced_lib>mmap</forced_lib>\n<forced_lib>mock</forced_lib>\n<forced_lib>msvcrt</forced_lib>\n<forced_lib>multiprocessing</forced_lib>\n<forced_lib>nt</forced_lib>\n<forced_lib>numpy</forced_lib>\n<forced_lib>operator</forced_lib>\n<forced_lib>os</forced_lib>\n<forced_lib>os.path</forced_lib>\n<forced_lib>parser</forced_lib>\n<forced_lib>pytest</forced_lib>\n<forced_lib>scipy</forced_lib>\n<forced_lib>signal</forced_lib>\n<forced_lib>socket</forced_lib>\n<forced_lib>ssl</forced_lib>\n<forced_lib>strop</forced_lib>\n<forced_lib>sys</forced_lib>\n<forced_lib>thread</forced_lib>\n<forced_lib>time</forced_lib>\n<forced_lib>winreg</forced_lib>\n<forced_lib>wx</forced_lib>\n<forced_lib>wxPython</forced_lib>\n<forced_lib>xxsubtype</forced_lib>\n<forced_lib>zipimport</forced_lib>\n<forced_lib>zlib</forced_lib>\n</xml>&&&&&<xml>\n<name>anaconda</name>\n<version>3.6</version>\n<executable>D\:\\ProgramData\\Anaconda3\\python.exe</executable>\n<lib>D\:\\ProgramData\\Anaconda3\\DLLs</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib</lib>\n<lib>D\:\\ProgramData\\Anaconda3</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\Sphinx-1.5.1-py3.6.egg</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\win32\\lib</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\Pythonwin</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\setuptools-27.2.0-py3.6.egg</lib>\n<lib>D\:\\ProgramData\\Anaconda3\\lib\\site-packages\\coverage-4.4.1-py3.6-win-amd64.egg</lib>\n<forced_lib>Image</forced_lib>\n<forced_lib>OpenGL</forced_lib>\n<forced_lib>_ast</forced_lib>\n<forced_lib>_bisect</forced_lib>\n<forced_lib>_blake2</forced_lib>\n<forced_lib>_bytesio</forced_lib>\n<forced_lib>_codecs</forced_lib>\n<forced_lib>_codecs_cn</forced_lib>\n<forced_lib>_codecs_hk</forced_lib>\n<forced_lib>_codecs_iso2022</forced_lib>\n<forced_lib>_codecs_jp</forced_lib>\n<forced_lib>_codecs_kr</forced_lib>\n<forced_lib>_codecs_tw</forced_lib>\n<forced_lib>_collections</forced_lib>\n<forced_lib>_csv</forced_lib>\n<forced_lib>_datetime</forced_lib>\n<forced_lib>_fileio</forced_lib>\n<forced_lib>_functools</forced_lib>\n<forced_lib>_heapq</forced_lib>\n<forced_lib>_hotshot</forced_lib>\n<forced_lib>_imp</forced_lib>\n<forced_lib>_io</forced_lib>\n<forced_lib>_json</forced_lib>\n<forced_lib>_locale</forced_lib>\n<forced_lib>_lsprof</forced_lib>\n<forced_lib>_md5</forced_lib>\n<forced_lib>_multibytecodec</forced_lib>\n<forced_lib>_opcode</forced_lib>\n<forced_lib>_operator</forced_lib>\n<forced_lib>_pickle</forced_lib>\n<forced_lib>_random</forced_lib>\n<forced_lib>_sha</forced_lib>\n<forced_lib>_sha1</forced_lib>\n<forced_lib>_sha256</forced_lib>\n<forced_lib>_sha3</forced_lib>\n<forced_lib>_sha512</forced_lib>\n<forced_lib>_signal</forced_lib>\n<forced_lib>_sre</forced_lib>\n<forced_lib>_stat</forced_lib>\n<forced_lib>_string</forced_lib>\n<forced_lib>_struct</forced_lib>\n<forced_lib>_subprocess</forced_lib>\n<forced_lib>_symtable</forced_lib>\n<forced_lib>_thread</forced_lib>\n<forced_lib>_tracemalloc</forced_lib>\n<forced_lib>_warnings</forced_lib>\n<forced_lib>_weakref</forced_lib>\n<forced_lib>_winapi</forced_lib>\n<forced_lib>_winreg</forced_lib>\n<forced_lib>array</forced_lib>\n<forced_lib>astropy</forced_lib>\n<forced_lib>astropy.units</forced_lib>\n<forced_lib>atexit</forced_lib>\n<forced_lib>audioop</forced_lib>\n<forced_lib>binascii</forced_lib>\n<forced_lib>builtins</forced_lib>\n<forced_lib>cPickle</forced_lib>\n<forced_lib>cStringIO</forced_lib>\n<forced_lib>cmath</forced_lib>\n<forced_lib>datetime</forced_lib>\n<forced_lib>email</forced_lib>\n<forced_lib>errno</forced_lib>\n<forced_lib>exceptions</forced_lib>\n<forced_lib>faulthandler</forced_lib>\n<forced_lib>future_builtins</forced_lib>\n<forced_lib>gc</forced_lib>\n<forced_lib>gi</forced_lib>\n<forced_lib>hashlib</forced_lib>\n<forced_lib>imageop</forced_lib>\n<forced_lib>imp</forced_lib>\n<forced_lib>itertools</forced_lib>\n<forced_lib>marshal</forced_lib>\n<forced_lib>math</forced_lib>\n<forced_lib>mmap</forced_lib>\n<forced_lib>mock</forced_lib>\n<forced_lib>msvcrt</forced_lib>\n<forced_lib>multiprocessing</forced_lib>\n<forced_lib>nose</forced_lib>\n<forced_lib>nose.tools</forced_lib>\n<forced_lib>nt</forced_lib>\n<forced_lib>numpy</forced_lib>\n<forced_lib>operator</forced_lib>\n<forced_lib>os</forced_lib>\n<forced_lib>os.path</forced_lib>\n<forced_lib>parser</forced_lib>\n<forced_lib>pytest</forced_lib>\n<forced_lib>scipy</forced_lib>\n<forced_lib>signal</forced_lib>\n<forced_lib>socket</forced_lib>\n<forced_lib>ssl</forced_lib>\n<forced_lib>strop</forced_lib>\n<forced_lib>sys</forced_lib>\n<forced_lib>thread</forced_lib>\n<forced_lib>time</forced_lib>\n<forced_lib>werkzeug</forced_lib>\n<forced_lib>winreg</forced_lib>\n<forced_lib>wx</forced_lib>\n<forced_lib>wxPython</forced_lib>\n<forced_lib>xxsubtype</forced_lib>\n<forced_lib>zipimport</forced_lib>\n<forced_lib>zlib</forced_lib>\n</xml>&&&&&
OPERATORS_COLOR=0,128,0
PARENS_COLOR=128,64,64
PYDEV_FUNDING_SHOW_AT_TIME_2016=1526002303986
PYDEV_NEW_PROJECT_CREATE_PREFERENCES=0
eclipse.preferences.version=1
org.python.pydev.editor.templates.PyTemplatePreferencesPage=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Call super(current_class, self).current_method()" enabled\="false" id\="org.python.pydev.editor.templates.python.super" name\="super">super(${current_class}, self).${current_method}(${cursor})</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Call superclass.current_method(self)" enabled\="false" id\="org.python.pydev.editor.templates.python.super_raw" name\="super_raw">${superclass}.${current_method}(self${cursor})</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Main function pattern." enabled\="false" id\="org.python.pydev.editor.templates.python.main" name\="main">if __name__ \=\= '__main__'\:\r\n    ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="pdb" enabled\="false" id\="org.python.pydev.editor.templates.python.pdb" name\="pd">import pdb;pdb.set_trace()</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="pydevd.settrace()" enabled\="false" id\="org.python.pydev.editor.templates.python.pydevd" name\="pydevd">import sys;sys.path.append(r'${pydevd_dir_location}')\r\nimport pydevd;pydevd.settrace()</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="pydevd.patch_django_autoreload()" enabled\="false" id\="org.python.pydev.editor.templates.python.pydevd_patch_django_auto_reload" name\="pydevd_patch_django_auto_reload">import sys;sys.path.append(r'${pydevd_dir_location}')\r\nimport pydevd;pydevd.patch_django_autoreload(patch_remote_debugger\=True, patch_show_console\=True)</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="equals and not equals" enabled\="false" id\="org.python.pydev.editor.templates.python.eq" name\="eq">def __eq__(self, o)\:\r\n    if isinstance(o, ${current_class})\:\r\n        ${pass}${cursor}\r\n\r\n    return False\r\n\r\ndef __ne__(self, o)\:\r\n\treturn not self \=\= o</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Class definition (subclass)" enabled\="false" id\="org.python.pydev.editor.templates.python.classo" name\="classs">class ${class}(${object})\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Class definition (simple)" enabled\="false" id\="org.python.pydev.editor.templates.python.class" name\="class">class ${class}\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Method definition (class)" enabled\="false" id\="org.python.pydev.editor.templates.python.defc" name\="defc">def ${method}(self)\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="def __init__(self)\:" enabled\="false" id\="org.python.pydev.editor.templates.python.ini" name\="ini">def __init__(self)\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="def __init__(self, ${params})" enabled\="false" id\="org.python.pydev.editor.templates.python.init" name\="inip">def __init__(self, ${params})\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Method definition (class - with parameters)" enabled\="false" id\="org.python.pydev.editor.templates.python.defp" name\="defp">def ${method}(self, ${params})\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Method definition (global)" enabled\="false" id\="org.python.pydev.editor.templates.python.def" name\="def">def ${method}()\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="print (considers python 2 or 3)" enabled\="false" id\="org.python.pydev.editor.templates.python.print" name\="print">print${space_if_py2}${lparen_if_py3}${cursor}${rparen_if_py3}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="print '\\n'.join(sorted(dir(value)))" enabled\="false" id\="org.python.pydev.editor.templates.python.printdir" name\="printdir">print${space_if_py2}${lparen_if_py3}'\\n'.join(sorted(dir(${cursor})))${rparen_if_py3}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="print current traceback" enabled\="false" id\="org.python.pydev.editor.templates.python.printexc" name\="printexc">import traceback;traceback.print_exc()${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="raise RuntimeError('desc')" enabled\="false" id\="org.python.pydev.editor.templates.python.raiseruntimeerror" name\="raiseruntimeerror">raise RuntimeError('${desc}')${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="raise" enabled\="false" id\="org.python.pydev.editor.templates.python.raise" name\="raise">raise ${cursor}</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="Complete test-case module with pyunit" enabled\="false" id\="org.python.pydev.editor.templates.python.testCase" name\="testCase">import unittest\r\n\r\nclass ${TestCase}(unittest.TestCase)\:\r\n\r\n    def setUp(self)\:\r\n        unittest.TestCase.setUp(self)\r\n\r\n    def tearDown(self)\:\r\n        unittest.TestCase.tearDown(self)\r\n\r\n    def test${Met1}(self)\:\r\n        ${pass}${cursor}\r\n\r\nif __name__ \=\= '__main__'\:\r\n    unittest.main()</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="and keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.and" name\="and">and ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="assert keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.assert" name\="assert">assert ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="break keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.break" name\="break">break${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="continue keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.continue" name\="continue">continue${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="del keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.del" name\="del">del ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="elif keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.elif" name\="elif">elif${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="else keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.else" name\="else">else${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="for keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.for" name\="for">for ${cursor}\:</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="from keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.from" name\="from">from ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="global keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.global" name\="global">global ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="import keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.import" name\="import">import ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="lambda keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.lambda" name\="lambda">lambda ${args}\:${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="not keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.not" name\="not">not ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="pass keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.pass" name\="pass">pass${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="return keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.return" name\="return">return ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="while keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.while" name\="while">while ${cursor}\:</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="yield keyword" enabled\="false" id\="org.python.pydev.editor.templates.python.yield" name\="yield">yield ${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="property creation from inner methods" enabled\="false" id\="org.python.pydev.editor.templates.python.property_inner" name\="property_inner">def ${prop}()\: \#@NoSelf\r\n    doc \= """${Docstring}""" \#@UnusedVariable\r\n\r\n    def fget(self)\:\r\n        return self._${prop}\r\n\r\n    def fset(self, value)\:\r\n        self._${prop} \= value\r\n\r\n    def fdel(self)\:\r\n        del self._${prop}\r\n\r\n    return locals()\r\n\r\n${prop} \= property(**${prop}())${cursor}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="encoding comment" enabled\="false" id\="org.python.pydev.editor.templates.python.encoding.comment" name\="cod">\# encoding\: ${word_selection}</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python" deleted\="false" description\="encoding comment\: utf-8" enabled\="false" id\="org.python.pydev.editor.templates.python.encoding.comment.utf8" name\="codu8">\# encoding\: utf-8</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Unittest with setUp and tearDown" enabled\="false" id\="org.python.pydev.editor.templates.python.module.setup_and_teardown" name\="Module\: Unittest with setUp and tearDown">'''\r\nCreated on ${date}\r\n\r\n@author\: ${user}\r\n'''\r\nimport unittest\r\n\r\n\r\nclass Test(unittest.TestCase)\:\r\n\r\n\r\n    def setUp(self)\:\r\n        pass\r\n\r\n\r\n    def tearDown(self)\:\r\n        pass\r\n\r\n\r\n    def test${Name}(self)\:\r\n        ${pass}${cursor}\r\n\r\n\r\nif __name__ \=\= "__main__"\:\r\n    \#import sys;sys.argv \= ['', 'Test.test${Name}']\r\n    unittest.main()</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Main" enabled\="false" id\="org.python.pydev.editor.templates.python.module.main" name\="Module\: Main">'''\r\nCreated on ${date}\r\n\r\n@author\: ${user}\r\n'''\r\n\r\nif __name__ \=\= '__main__'\:\r\n    ${pass}${cursor}</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Class" enabled\="false" id\="org.python.pydev.editor.templates.python.module.class" name\="Module\: Class">'''\r\nCreated on ${date}\r\n\r\n@author\: ${user}\r\n'''\r\n\r\nclass ${MyClass}(${object})\:\r\n    '''\r\n    ${classdocs}\r\n    '''\r\n\r\n\r\n    def __init__(self, ${params})\:\r\n        '''\r\n        ${Constructor}\r\n        '''\r\n        ${cursor}</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Empty" enabled\="false" id\="org.python.pydev.editor.templates.python.module.empty" name\="&lt;Empty&gt;">\#coding\:utf-8\r\n'''\r\nCreated on ${date}\r\n\r\n@author\: ${user}\r\n'''\r\n${cursor}</template><template autoinsert\="false" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Unittest" enabled\="false" id\="org.python.pydev.editor.templates.python.module.unittest" name\="Module\: Unittest">'''\r\nCreated on ${date}\r\n\r\n@author\: ${user}\r\n'''\r\nimport unittest\r\n\r\n\r\nclass Test(unittest.TestCase)\:\r\n\r\n\r\n    def test${Name}(self)\:\r\n        ${pass}${cursor}\r\n\r\n\r\nif __name__ \=\= "__main__"\:\r\n    \#import sys;sys.argv \= ['', 'Test.test${Name}']\r\n    unittest.main()</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Command line tool skeleton using argparse (suitable for Python 2.7+)" enabled\="false" id\="org.python.pydev.editor.templates.python.module.cli.argparse" name\="Module\: CLI (argparse)">\#\!/usr/local/bin/python2.7\r\n\# encoding\: utf-8\r\n'''\r\n${module} -- ${shortdesc}\r\n\r\n${module} is a ${description}\r\n\r\nIt defines ${classes_and_methods}\r\n\r\n@author\:     ${user_name}\r\n\r\n@copyright\:  ${year} ${organization_name}. All rights reserved.\r\n\r\n@license\:    ${license}\r\n\r\n@contact\:    ${user_email}\r\n@deffield    updated\: Updated\r\n'''\r\n\r\nimport sys\r\nimport os\r\n\r\nfrom argparse import ArgumentParser\r\nfrom argparse import RawDescriptionHelpFormatter\r\n\r\n__all__ \= []\r\n__version__ \= 0.1\r\n__date__ \= '${isodate}'\r\n__updated__ \= '${isodate}'\r\n\r\nDEBUG \= 1\r\nTESTRUN \= 0\r\nPROFILE \= 0\r\n\r\nclass CLIError(Exception)\:\r\n    '''Generic exception to raise and log different fatal errors.'''\r\n    def __init__(self, msg)\:\r\n        super(CLIError).__init__(type(self))\r\n        self.msg \= "E\: %s" % msg\r\n    def __str__(self)\:\r\n        return self.msg\r\n    def __unicode__(self)\:\r\n        return self.msg\r\n\r\ndef main(argv\=None)\: \# IGNORE\:C0111\r\n    '''Command line options.'''\r\n\r\n    if argv is None\:\r\n        argv \= sys.argv\r\n    else\:\r\n        sys.argv.extend(argv)\r\n\r\n    program_name \= os.path.basename(sys.argv[0])\r\n    program_version \= "v%s" % __version__\r\n    program_build_date \= str(__updated__)\r\n    program_version_message \= '%%(prog)s %s (%s)' % (program_version, program_build_date)\r\n    program_shortdesc \= __import__('__main__').__doc__.split("\\n")[1]\r\n    program_license \= '''%s\r\n\r\n  Created by ${user_name} on %s.\r\n  Copyright ${year} ${organization_name}. All rights reserved.\r\n\r\n  Licensed under the Apache License 2.0\r\n  http\://www.apache.org/licenses/LICENSE-2.0\r\n\r\n  Distributed on an "AS IS" basis without warranties\r\n  or conditions of any kind, either express or implied.\r\n\r\nUSAGE\r\n''' % (program_shortdesc, str(__date__))\r\n\r\n    try\:\r\n        \# Setup argument parser\r\n        parser \= ArgumentParser(description\=program_license, formatter_class\=RawDescriptionHelpFormatter)\r\n        parser.add_argument("-r", "--recursive", dest\="recurse", action\="store_true", help\="recurse into subfolders [default\: %(default)s]")\r\n        parser.add_argument("-v", "--verbose", dest\="verbose", action\="count", help\="set verbosity level [default\: %(default)s]")\r\n        parser.add_argument("-i", "--include", dest\="include", help\="only include paths matching this regex pattern. Note\: exclude is given preference over include. [default\: %(default)s]", metavar\="RE" )\r\n        parser.add_argument("-e", "--exclude", dest\="exclude", help\="exclude paths matching this regex pattern. [default\: %(default)s]", metavar\="RE" )\r\n        parser.add_argument('-V', '--version', action\='version', version\=program_version_message)\r\n        parser.add_argument(dest\="paths", help\="paths to folder(s) with source file(s) [default\: %(default)s]", metavar\="path", nargs\='+')\r\n\r\n        \# Process arguments\r\n        args \= parser.parse_args()\r\n\r\n        paths \= args.paths\r\n        verbose \= args.verbose\r\n        recurse \= args.recurse\r\n        inpat \= args.include\r\n        expat \= args.exclude\r\n\r\n        if verbose &gt; 0\:\r\n            print("Verbose mode on")\r\n            if recurse\:\r\n                print("Recursive mode on")\r\n            else\:\r\n                print("Recursive mode off")\r\n\r\n        if inpat and expat and inpat \=\= expat\:\r\n            raise CLIError("include and exclude pattern are equal\! Nothing will be processed.")\r\n\r\n        for inpath in paths\:\r\n            \#\#\# do something with inpath \#\#\#\r\n            print(inpath)\r\n        return 0\r\n    except KeyboardInterrupt\:\r\n        \#\#\# handle keyboard interrupt \#\#\#\r\n        return 0\r\n    except Exception, e\:\r\n        if DEBUG or TESTRUN\:\r\n            raise(e)\r\n        indent \= len(program_name) * " "\r\n        sys.stderr.write(program_name + "\: " + repr(e) + "\\n")\r\n        sys.stderr.write(indent + "  for help use --help")\r\n        return 2\r\n\r\nif __name__ \=\= "__main__"\:\r\n    if DEBUG\:\r\n        sys.argv.append("-h")\r\n        sys.argv.append("-v")\r\n        sys.argv.append("-r")\r\n    if TESTRUN\:\r\n        import doctest\r\n        doctest.testmod()\r\n    if PROFILE\:\r\n        import cProfile\r\n        import pstats\r\n        profile_filename \= '${module}_profile.txt'\r\n        cProfile.run('main()', profile_filename)\r\n        statsfile \= open("profile_stats.txt", "wb")\r\n        p \= pstats.Stats(profile_filename, stream\=statsfile)\r\n        stats \= p.strip_dirs().sort_stats('cumulative')\r\n        stats.print_stats()\r\n        statsfile.close()\r\n        sys.exit(0)\r\n    sys.exit(main())</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="Module\: Command line tool skeleton using optparse (suitable for Python &lt; 2.6)" enabled\="false" id\="org.python.pydev.editor.templates.python.module.cli.optparse" name\="Module\: CLI (optparse)">\#\!/usr/bin/env python\r\n\# encoding\: utf-8\r\n'''\r\n${module} -- ${shortdesc}\r\n\r\n${module} is a ${description}\r\n\r\nIt defines ${classes_and_methods}\r\n\r\n@author\:     ${user_name}\r\n\r\n@copyright\:  ${year} ${organization_name}. All rights reserved.\r\n\r\n@license\:    ${license}\r\n\r\n@contact\:    ${user_email}\r\n@deffield    updated\: Updated\r\n'''\r\n\r\nimport sys\r\nimport os\r\n\r\nfrom optparse import OptionParser\r\n\r\n__all__ \= []\r\n__version__ \= 0.1\r\n__date__ \= '${isodate}'\r\n__updated__ \= '${isodate}'\r\n\r\nDEBUG \= 1\r\nTESTRUN \= 0\r\nPROFILE \= 0\r\n\r\ndef main(argv\=None)\:\r\n    '''Command line options.'''\r\n\r\n    program_name \= os.path.basename(sys.argv[0])\r\n    program_version \= "v0.1"\r\n    program_build_date \= "%s" % __updated__\r\n\r\n    program_version_string \= '%%prog %s (%s)' % (program_version, program_build_date)\r\n    \#program_usage \= '''usage\: spam two eggs''' \# optional - will be autogenerated by optparse\r\n    program_longdesc \= '''''' \# optional - give further explanation about what the program does\r\n    program_license \= "Copyright ${year} ${user_name} (${organization_name})                                            \\\r\n                Licensed under the Apache License 2.0\\nhttp\://www.apache.org/licenses/LICENSE-2.0"\r\n\r\n    if argv is None\:\r\n        argv \= sys.argv[1\:]\r\n    try\:\r\n        \# setup option parser\r\n        parser \= OptionParser(version\=program_version_string, epilog\=program_longdesc, description\=program_license)\r\n        parser.add_option("-i", "--in", dest\="infile", help\="set input path [default\: %default]", metavar\="FILE")\r\n        parser.add_option("-o", "--out", dest\="outfile", help\="set output path [default\: %default]", metavar\="FILE")\r\n        parser.add_option("-v", "--verbose", dest\="verbose", action\="count", help\="set verbosity level [default\: %default]")\r\n\r\n        \# set defaults\r\n        parser.set_defaults(outfile\="./out.txt", infile\="./in.txt")\r\n\r\n        \# process options\r\n        (opts, args) \= parser.parse_args(argv)\r\n\r\n        if opts.verbose &gt; 0\:\r\n            print("verbosity level \= %d" % opts.verbose)\r\n        if opts.infile\:\r\n            print("infile \= %s" % opts.infile)\r\n        if opts.outfile\:\r\n            print("outfile \= %s" % opts.outfile)\r\n\r\n        \# MAIN BODY \#\r\n\r\n    except Exception, e\:\r\n        indent \= len(program_name) * " "\r\n        sys.stderr.write(program_name + "\: " + repr(e) + "\\n")\r\n        sys.stderr.write(indent + "  for help use --help")\r\n        return 2\r\n\r\n\r\nif __name__ \=\= "__main__"\:\r\n    if DEBUG\:\r\n        sys.argv.append("-h")\r\n    if TESTRUN\:\r\n        import doctest\r\n        doctest.testmod()\r\n    if PROFILE\:\r\n        import cProfile\r\n        import pstats\r\n        profile_filename \= '${module}_profile.txt'\r\n        cProfile.run('main()', profile_filename)\r\n        statsfile \= open("profile_stats.txt", "wb")\r\n        p \= pstats.Stats(profile_filename, stream\=statsfile)\r\n        stats \= p.strip_dirs().sort_stats('cumulative')\r\n        stats.print_stats()\r\n        statsfile.close()\r\n        sys.exit(0)\r\n    sys.exit(main())</template><template autoinsert\="true" context\="org.python.pydev.editor.templates.python.modules" deleted\="false" description\="\u6CE8\u91CA\u4F5C\u8005\uFF0C\u65E5\u671F" enabled\="true" name\="Begin">\# coding\uFF1Autf-8&\#13;\r\n'''&\#13;\r\n&\#13;\r\n @Created on ${date} ${time}&\#13;\r\n @author\: ${user}&\#13;\r\n'''</template></templates>
